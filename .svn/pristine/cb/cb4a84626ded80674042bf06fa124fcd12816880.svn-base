using JahanAraShop.Data.Context;
using JahanAraShop.Domain.Constants;
using JahanAraShop.Domain.DomainModel;
using JahanAraShop.Models;
using Newtonsoft.Json;
using System;
using System.Collections.Generic;
using System.Dynamic;
using System.Linq;
using System.Net.Http;
using System.Text;
using System.Web;
using System.Web.Mvc;

namespace JahanAraShop.Controllers
{
    public partial class HomeController : Controller
    {

        // GET: Home
        public virtual async System.Threading.Tasks.Task<ActionResult> Index()
        {
            using (var db = new DataBaseContext())
            {

                //fill GoodViewModel For MainPage
                var model = new GoodViewModel();
                model.NewestGoods = new List<Goods>();
                model.BestSellingGoods = new List<Goods>();
                var NewGood = (from good in db.tblGoods
                               join goodsale in db.tblGoodSaleInfoes on good.BarCode equals goodsale.Barcode
                               where good.TabletVisible == true && goodsale.RetailPrice != 0 && goodsale.PricingMethodID == 14 && good.Name3!=null
                               orderby good.FarsiCreateDate descending
                               select new
                               {
                                   good.ID,
                                   good.Name,
                                   good.BarCode,
                                   good.GoodGroupID,
                                   good.Code,
                                   goodsale.RetailPrice,
                                   good.Notes,
                                   good.TypeID,
                                   good.SiteVisible,
                                   good.TabletVisible,
                                   good.CreateDate,
                                   good.FarsiCreateDate,
                                   good.Sequence,
                               }).Take(8).ToList();
                foreach (var item in NewGood)
                {
                    model.NewestGoods.Add(new Goods
                    {
                        ID = item.ID,
                        BarCode = item.BarCode,
                        GoodGroupID = item.GoodGroupID,
                        Code = item.Code,
                        Name = item.Name,
                        RetailPrice = item.RetailPrice,
                        Notes = item.Notes,
                        TypeID = item.TypeID,
                        SiteVisible = item.SiteVisible,
                        TabletVisible = item.TabletVisible,
                        Sequence = item.Sequence,
                    });
                }


                var SalesGood = (from good in db.tblGoods
                                 join goodsale in db.tblGoodSaleInfoes on good.BarCode equals goodsale.Barcode
                                 join detail in db.tblSaleInvoiceDetails on good.BarCode equals detail.BarCode
                                 where good.TabletVisible == true && goodsale.RetailPrice != 0 && goodsale.PricingMethodID == 14
                                 && good.Name3 != null
                                 select new
                                 {
                                     good.ID,
                                     good.Name,
                                     good.BarCode,
                                     good.GoodGroupID,
                                     good.Code,
                                     goodsale.RetailPrice,
                                     good.Notes,
                                     good.TypeID,
                                     good.SiteVisible,
                                     good.TabletVisible,
                                     good.CreateDate,
                                     good.FarsiCreateDate,
                                     good.Sequence,
                                 }).Count();

                //news
                model.TblSiteInformations = db.tblSiteInformations.OrderByDescending(x => x.FarsiCreateDate).Take(4).ToList();
                using (var client = new HttpClient())
                {

                    client.BaseAddress = new Uri(AppConstants.ApiAddress);
                    dynamic Sales = new ExpandoObject();
                    var jsonGetGoodGoal = JsonConvert.SerializeObject(Sales);
                    var content = new StringContent(jsonGetGoodGoal, Encoding.UTF8, AppConstants.JsonType);
                    var url = AppConstants.BestSellingGoods+ "/"+AppConstants.ApiKey;
                    var result = await client.GetAsync(url);
                    var response = result.Content.ReadAsStringAsync().Result;
                    var res = JsonConvert.DeserializeObject<List<BestSellingGoods>>(response);

                    foreach (var item in res)
                    {
                        model.BestSellingGoods.Add(new Goods
                        {
                            ID = item.ID,
                            BarCode = item.BarCode,
                            GoodGroupID = item.GoodGroupID,
                            Code = item.Code,
                            Name = item.Name,
                            RetailPrice = item.RetailPrice,
                            Notes = item.Notes,
                            TypeID = item.TypeID,
                            SiteVisible = item.SiteVisible,
                            TabletVisible = item.TabletVisible,
                            Sequence = item.Sequence,
                        });
                    }

                    return View(model);
                }



            }
        }



  

        public virtual ActionResult Aboutus()
        {

            return View();
        }

        public virtual ActionResult Contactus()
        {

            return View();
        }
    }
}