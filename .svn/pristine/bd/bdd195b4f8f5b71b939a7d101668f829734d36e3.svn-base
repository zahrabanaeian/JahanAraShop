using JahanAraShop.Data.Context;
using JahanAraShop.Domain.Constants;
using JahanAraShop.Domain.DomainModel;
using JahanAraShop.Models;
using JahanAraShop.Services;
using Newtonsoft.Json;
using System;
using System.Collections.Generic;
using System.Dynamic;
using System.Linq;
using System.Net.Http;
using System.Text;
using System.Web;
using System.Web.Mvc;

namespace JahanAraShop.Controllers
{
    public partial class UserController : Controller
    {
        // GET: User
        public virtual async System.Threading.Tasks.Task<ActionResult> Index(string Cellphone)
        {
            using (var db = new DataBaseContext())
            {
                using (var client = new HttpClient())
                {
                    var Model = new InvoiceViewModel();
                    client.BaseAddress = new Uri(AppConstants.ApiAddress);
                    dynamic Sales = new ExpandoObject();
                    var jsonGetGoodGoal = JsonConvert.SerializeObject(Sales);
                    var content = new StringContent(jsonGetGoodGoal, Encoding.UTF8, AppConstants.JsonType);
                    var url = AppConstants.GetOrganizationSite + "/" + Cellphone + "/" + AppConstants.ApiKey;
                    var result = await client.GetAsync(url);
                    var response = result.Content.ReadAsStringAsync().Result;
                    var res = JsonConvert.DeserializeObject<tblOrganization>(response);
                    Model.Buyer = res;
                    var states = db.tblSiteStates.ToDictionary(x => x.IdTbl_State, x => x.StateName);
                    SelectListItem[] tempList = new SelectListItem[states.Count];
                    int i = 0;
                    foreach (var item in states)
                    {
                        tempList[i] = new SelectListItem
                        {
                            Value = item.Key.ToString(),
                            Text = item.Value,
                            //Selected  = item.Key!=null? true:false,
                        };
                        i++;
                    }
                    Model.States = tempList;

                    return View(Model);
                }
            }

        }

        public virtual async System.Threading.Tasks.Task<ActionResult> EditOrg(InvoiceViewModel Model)
        {

            var SaveOrgModel = new SaveOrganizationModel();
            SaveOrgModel.ApiKey = AppConstants.ApiKey;
            SaveOrgModel.TblOrganization = Model.Buyer;
            var res = new Result();
            using (var client = new HttpClient())
            {
                client.BaseAddress = new Uri(AppConstants.ApiAddress);
                var url = AppConstants.EditOrganizationSite;
                var jsonEditOrganization = JsonConvert.SerializeObject(SaveOrgModel);
                var content = new StringContent(jsonEditOrganization, Encoding.UTF8, AppConstants.JsonType);
                var result = await client.PostAsync(url, content);
                var response = result.Content.ReadAsStringAsync().Result;
                 res = JsonConvert.DeserializeObject<Result>(response);

                if (res.Message == "Done")
                {
                    return RedirectToAction(MVC.User.Index(Model.Buyer.CellPhone));
                }


            }

          
             return   RedirectToAction(MVC.User.Index(Model.Buyer.CellPhone));
            
            // return View();


        }
    }
}