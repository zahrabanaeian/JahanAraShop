using JahanAraShop.Data.Context;
using JahanAraShop.Domain.DomainModel;
using JahanAraShop.Helper;
using JahanAraShop.Models;
using System;
using System.Collections.Generic;
using System.Dynamic;
using System.Linq;
using System.Web;
using System.Web.Mvc;

namespace JahanAraShop.Controllers
{
    public partial class ProductController : Controller
    {
        [ActionName("Products")]
        public virtual ActionResult Index()
        {
            return View();
        }


        public virtual ActionResult Categories(int groupid)
        {


            ViewBag.GroupID = groupid;
            return View();



        }

        public virtual IEnumerable<Goods> Sorting(int pageNumber, int pageSize, int GroupID, List<string> ChekedBrands, decimal? MinPrice, decimal MaxPrice, string Sort)
        {
            using (var db = new DataBaseContext())
            {
                List<int> SelectBrand = new List<int>();
                var model = new GoodViewModel();
                model.CategoriesGoods = new List<Goods>();
                if (ChekedBrands != null)
                {

                    SelectBrand = ChekedBrands.Select(int.Parse).ToList();
                    if (Sort == "Newest")
                    {
                        if (MinPrice != 0 || MaxPrice != 0)
                        {
                            var CategoriesGood = (from good in db.tblGoods
                                                  join goodsale in db.tblGoodSaleInfoes on good.BarCode equals goodsale.Barcode
                                                  where good.TabletVisible == true && goodsale.RetailPrice != 0 && goodsale.PricingMethodID == 14
                                                  && good.GoodGroupID == GroupID && goodsale.RetailPrice >= MinPrice && goodsale.RetailPrice <= MaxPrice
                                                  && SelectBrand.Contains(good.TypeID ?? 0)
                                                  orderby good.FarsiCreateDate descending
                                                  select new
                                                  {
                                                      good.ID,
                                                      good.Name,
                                                      good.BarCode,
                                                      good.GoodGroupID,
                                                      good.Code,
                                                      goodsale.RetailPrice,
                                                      good.Notes,
                                                      good.TypeID,
                                                      good.SiteVisible,
                                                      good.TabletVisible,
                                                      good.CreateDate,
                                                      good.FarsiCreateDate,
                                                      good.Sequence,
                                                  }).ToList();
                            foreach (var item in CategoriesGood)
                            {
                                model.CategoriesGoods.Add(new Goods
                                {
                                    ID = item.ID,
                                    BarCode = item.BarCode,
                                    GoodGroupID = item.GoodGroupID,
                                    Code = item.Code,
                                    Name = item.Name,
                                    RetailPrice = item.RetailPrice,
                                    Notes = item.Notes,
                                    TypeID = item.TypeID,
                                    SiteVisible = item.SiteVisible,
                                    TabletVisible = item.TabletVisible,
                                    Sequence = item.Sequence,
                                });
                            }
                        }
                        else
                        {
                            var CategoriesGood = (from good in db.tblGoods
                                                  join goodsale in db.tblGoodSaleInfoes on good.BarCode equals goodsale.Barcode
                                                  where good.TabletVisible == true && goodsale.RetailPrice != 0 && goodsale.PricingMethodID == 14
                                                  && good.GoodGroupID == GroupID
                                                  && SelectBrand.Contains(good.TypeID ?? 0)
                                                  orderby good.FarsiCreateDate descending
                                                  select new
                                                  {
                                                      good.ID,
                                                      good.Name,
                                                      good.BarCode,
                                                      good.GoodGroupID,
                                                      good.Code,
                                                      goodsale.RetailPrice,
                                                      good.Notes,
                                                      good.TypeID,
                                                      good.SiteVisible,
                                                      good.TabletVisible,
                                                      good.CreateDate,
                                                      good.FarsiCreateDate,
                                                      good.Sequence,
                                                  }).ToList();
                            foreach (var item in CategoriesGood)
                            {
                                model.CategoriesGoods.Add(new Goods
                                {
                                    ID = item.ID,
                                    BarCode = item.BarCode,
                                    GoodGroupID = item.GoodGroupID,
                                    Code = item.Code,
                                    Name = item.Name,
                                    RetailPrice = item.RetailPrice,
                                    Notes = item.Notes,
                                    TypeID = item.TypeID,
                                    SiteVisible = item.SiteVisible,
                                    TabletVisible = item.TabletVisible,
                                    Sequence = item.Sequence,
                                });
                            }
                        }
                        return model.CategoriesGoods;
                    }
                    if (Sort == "Cheapest")
                    {
                        if (MinPrice != 0 || MaxPrice != 0)
                        {
                            var CategoriesGood = (from good in db.tblGoods
                                                  join goodsale in db.tblGoodSaleInfoes on good.BarCode equals goodsale.Barcode
                                                  where good.TabletVisible == true && goodsale.RetailPrice != 0 && goodsale.PricingMethodID == 14
                                                  && good.GoodGroupID == GroupID && goodsale.RetailPrice >= MinPrice && goodsale.RetailPrice <= MaxPrice
                                                  && SelectBrand.Contains(good.TypeID ?? 0)
                                                  orderby good.RetailPrice ascending
                                                  select new
                                                  {
                                                      good.ID,
                                                      good.Name,
                                                      good.BarCode,
                                                      good.GoodGroupID,
                                                      good.Code,
                                                      goodsale.RetailPrice,
                                                      good.Notes,
                                                      good.TypeID,
                                                      good.SiteVisible,
                                                      good.TabletVisible,
                                                      good.CreateDate,
                                                      good.FarsiCreateDate,
                                                      good.Sequence,
                                                  }).ToList();
                            foreach (var item in CategoriesGood)
                            {
                                model.CategoriesGoods.Add(new Goods
                                {
                                    ID = item.ID,
                                    BarCode = item.BarCode,
                                    GoodGroupID = item.GoodGroupID,
                                    Code = item.Code,
                                    Name = item.Name,
                                    RetailPrice = item.RetailPrice,
                                    Notes = item.Notes,
                                    TypeID = item.TypeID,
                                    SiteVisible = item.SiteVisible,
                                    TabletVisible = item.TabletVisible,
                                    Sequence = item.Sequence,
                                });
                            }
                        }
                        else
                        {

                            
                                var CategoriesGood = (from good in db.tblGoods
                                                      join goodsale in db.tblGoodSaleInfoes on good.BarCode equals goodsale.Barcode
                                                      where good.TabletVisible == true && goodsale.RetailPrice != 0 && goodsale.PricingMethodID == 14
                                                      && good.GoodGroupID == GroupID 
                                                      && SelectBrand.Contains(good.TypeID ?? 0)
                                                      orderby good.RetailPrice ascending
                                                      select new
                                                      {
                                                          good.ID,
                                                          good.Name,
                                                          good.BarCode,
                                                          good.GoodGroupID,
                                                          good.Code,
                                                          goodsale.RetailPrice,
                                                          good.Notes,
                                                          good.TypeID,
                                                          good.SiteVisible,
                                                          good.TabletVisible,
                                                          good.CreateDate,
                                                          good.FarsiCreateDate,
                                                          good.Sequence,
                                                      }).ToList();
                                foreach (var item in CategoriesGood)
                                {
                                    model.CategoriesGoods.Add(new Goods
                                    {
                                        ID = item.ID,
                                        BarCode = item.BarCode,
                                        GoodGroupID = item.GoodGroupID,
                                        Code = item.Code,
                                        Name = item.Name,
                                        RetailPrice = item.RetailPrice,
                                        Notes = item.Notes,
                                        TypeID = item.TypeID,
                                        SiteVisible = item.SiteVisible,
                                        TabletVisible = item.TabletVisible,
                                        Sequence = item.Sequence,
                                    });
                                }
                            
                           
                        }
                        return model.CategoriesGoods;

                    }

                    else

                    {
                        if (MinPrice != 0 || MaxPrice != 0)
                        {
                            var CategoriesGood = (from good in db.tblGoods
                                                  join goodsale in db.tblGoodSaleInfoes on good.BarCode equals goodsale.Barcode
                                                  where good.TabletVisible == true && goodsale.RetailPrice != 0 && goodsale.PricingMethodID == 14
                                                  && good.GoodGroupID == GroupID && goodsale.RetailPrice >= MinPrice && goodsale.RetailPrice <= MaxPrice
                                                  && SelectBrand.Contains(good.TypeID ?? 0)
                                                  orderby good.RetailPrice descending
                                                  select new
                                                  {
                                                      good.ID,
                                                      good.Name,
                                                      good.BarCode,
                                                      good.GoodGroupID,
                                                      good.Code,
                                                      goodsale.RetailPrice,
                                                      good.Notes,
                                                      good.TypeID,
                                                      good.SiteVisible,
                                                      good.TabletVisible,
                                                      good.CreateDate,
                                                      good.FarsiCreateDate,
                                                      good.Sequence,
                                                  }).ToList();
                            foreach (var item in CategoriesGood)
                            {
                                model.CategoriesGoods.Add(new Goods
                                {
                                    ID = item.ID,
                                    BarCode = item.BarCode,
                                    GoodGroupID = item.GoodGroupID,
                                    Code = item.Code,
                                    Name = item.Name,
                                    RetailPrice = item.RetailPrice,
                                    Notes = item.Notes,
                                    TypeID = item.TypeID,
                                    SiteVisible = item.SiteVisible,
                                    TabletVisible = item.TabletVisible,
                                    Sequence = item.Sequence,
                                });
                            }
                        }

                        else

                        {
                            var CategoriesGood = (from good in db.tblGoods
                                                  join goodsale in db.tblGoodSaleInfoes on good.BarCode equals goodsale.Barcode
                                                  where good.TabletVisible == true && goodsale.RetailPrice != 0 && goodsale.PricingMethodID == 14
                                                  && good.GoodGroupID == GroupID
                                                  && SelectBrand.Contains(good.TypeID ?? 0)
                                                  orderby good.RetailPrice descending
                                                  select new
                                                  {
                                                      good.ID,
                                                      good.Name,
                                                      good.BarCode,
                                                      good.GoodGroupID,
                                                      good.Code,
                                                      goodsale.RetailPrice,
                                                      good.Notes,
                                                      good.TypeID,
                                                      good.SiteVisible,
                                                      good.TabletVisible,
                                                      good.CreateDate,
                                                      good.FarsiCreateDate,
                                                      good.Sequence,
                                                  }).ToList();
                            foreach (var item in CategoriesGood)
                            {
                                model.CategoriesGoods.Add(new Goods
                                {
                                    ID = item.ID,
                                    BarCode = item.BarCode,
                                    GoodGroupID = item.GoodGroupID,
                                    Code = item.Code,
                                    Name = item.Name,
                                    RetailPrice = item.RetailPrice,
                                    Notes = item.Notes,
                                    TypeID = item.TypeID,
                                    SiteVisible = item.SiteVisible,
                                    TabletVisible = item.TabletVisible,
                                    Sequence = item.Sequence,
                                });
                            }
                        }
                        return model.CategoriesGoods;

                    }
                }
                //////
                else
                {

                    if (Sort == "Newest")
                    {
                        if (MinPrice != 0 || MaxPrice != 0)
                        {
                            var CategoriesGood = (from good in db.tblGoods
                                                  join goodsale in db.tblGoodSaleInfoes on good.BarCode equals goodsale.Barcode
                                                  where good.TabletVisible == true && goodsale.RetailPrice != 0 && goodsale.PricingMethodID == 14
                                                  && good.GoodGroupID == GroupID && goodsale.RetailPrice >= MinPrice && goodsale.RetailPrice <= MaxPrice

                                                  orderby good.FarsiCreateDate descending
                                                  select new
                                                  {
                                                      good.ID,
                                                      good.Name,
                                                      good.BarCode,
                                                      good.GoodGroupID,
                                                      good.Code,
                                                      goodsale.RetailPrice,
                                                      good.Notes,
                                                      good.TypeID,
                                                      good.SiteVisible,
                                                      good.TabletVisible,
                                                      good.CreateDate,
                                                      good.FarsiCreateDate,
                                                      good.Sequence,
                                                  }).ToList();
                            foreach (var item in CategoriesGood)
                            {
                                model.CategoriesGoods.Add(new Goods
                                {
                                    ID = item.ID,
                                    BarCode = item.BarCode,
                                    GoodGroupID = item.GoodGroupID,
                                    Code = item.Code,
                                    Name = item.Name,
                                    RetailPrice = item.RetailPrice,
                                    Notes = item.Notes,
                                    TypeID = item.TypeID,
                                    SiteVisible = item.SiteVisible,
                                    TabletVisible = item.TabletVisible,
                                    Sequence = item.Sequence,
                                });
                            }
                        }
                        else
                        {

                            var CategoriesGood = (from good in db.tblGoods
                                                  join goodsale in db.tblGoodSaleInfoes on good.BarCode equals goodsale.Barcode
                                                  where good.TabletVisible == true && goodsale.RetailPrice != 0 && goodsale.PricingMethodID == 14
                                                  && good.GoodGroupID == GroupID
                                                  orderby good.FarsiCreateDate descending
                                                  select new
                                                  {
                                                      good.ID,
                                                      good.Name,
                                                      good.BarCode,
                                                      good.GoodGroupID,
                                                      good.Code,
                                                      goodsale.RetailPrice,
                                                      good.Notes,
                                                      good.TypeID,
                                                      good.SiteVisible,
                                                      good.TabletVisible,
                                                      good.CreateDate,
                                                      good.FarsiCreateDate,
                                                      good.Sequence,
                                                  }).ToList();
                            foreach (var item in CategoriesGood)
                            {
                                model.CategoriesGoods.Add(new Goods
                                {
                                    ID = item.ID,
                                    BarCode = item.BarCode,
                                    GoodGroupID = item.GoodGroupID,
                                    Code = item.Code,
                                    Name = item.Name,
                                    RetailPrice = item.RetailPrice,
                                    Notes = item.Notes,
                                    TypeID = item.TypeID,
                                    SiteVisible = item.SiteVisible,
                                    TabletVisible = item.TabletVisible,
                                    Sequence = item.Sequence,
                                });
                            }


                        }
                        return model.CategoriesGoods;
                    }
                    if (Sort == "Cheapest")
                    {
                        if (MinPrice != 0 || MaxPrice != 0)
                        {
                            var CategoriesGood = (from good in db.tblGoods
                                                  join goodsale in db.tblGoodSaleInfoes on good.BarCode equals goodsale.Barcode
                                                  where good.TabletVisible == true && goodsale.RetailPrice != 0 && goodsale.PricingMethodID == 14
                                                  && good.GoodGroupID == GroupID && goodsale.RetailPrice >= MinPrice && goodsale.RetailPrice <= MaxPrice

                                                  orderby good.RetailPrice ascending
                                                  select new
                                                  {
                                                      good.ID,
                                                      good.Name,
                                                      good.BarCode,
                                                      good.GoodGroupID,
                                                      good.Code,
                                                      goodsale.RetailPrice,
                                                      good.Notes,
                                                      good.TypeID,
                                                      good.SiteVisible,
                                                      good.TabletVisible,
                                                      good.CreateDate,
                                                      good.FarsiCreateDate,
                                                      good.Sequence,
                                                  }).ToList();
                            foreach (var item in CategoriesGood)
                            {
                                model.CategoriesGoods.Add(new Goods
                                {
                                    ID = item.ID,
                                    BarCode = item.BarCode,
                                    GoodGroupID = item.GoodGroupID,
                                    Code = item.Code,
                                    Name = item.Name,
                                    RetailPrice = item.RetailPrice,
                                    Notes = item.Notes,
                                    TypeID = item.TypeID,
                                    SiteVisible = item.SiteVisible,
                                    TabletVisible = item.TabletVisible,
                                    Sequence = item.Sequence,
                                });
                            }
                        }
                        else
                        {


                            var CategoriesGood = (from good in db.tblGoods
                                                  join goodsale in db.tblGoodSaleInfoes on good.BarCode equals goodsale.Barcode
                                                  where good.TabletVisible == true && goodsale.RetailPrice != 0 && goodsale.PricingMethodID == 14
                                                  && good.GoodGroupID == GroupID

                                                  orderby good.RetailPrice ascending
                                                  select new
                                                  {
                                                      good.ID,
                                                      good.Name,
                                                      good.BarCode,
                                                      good.GoodGroupID,
                                                      good.Code,
                                                      goodsale.RetailPrice,
                                                      good.Notes,
                                                      good.TypeID,
                                                      good.SiteVisible,
                                                      good.TabletVisible,
                                                      good.CreateDate,
                                                      good.FarsiCreateDate,
                                                      good.Sequence,
                                                  }).ToList();
                            foreach (var item in CategoriesGood)
                            {
                                model.CategoriesGoods.Add(new Goods
                                {
                                    ID = item.ID,
                                    BarCode = item.BarCode,
                                    GoodGroupID = item.GoodGroupID,
                                    Code = item.Code,
                                    Name = item.Name,
                                    RetailPrice = item.RetailPrice,
                                    Notes = item.Notes,
                                    TypeID = item.TypeID,
                                    SiteVisible = item.SiteVisible,
                                    TabletVisible = item.TabletVisible,
                                    Sequence = item.Sequence,
                                });
                            }



                        }
                        return model.CategoriesGoods;

                    }
                    else

                    {
                        var CategoriesGood = (from good in db.tblGoods
                                              join goodsale in db.tblGoodSaleInfoes on good.BarCode equals goodsale.Barcode
                                              where good.TabletVisible == true && goodsale.RetailPrice != 0 && goodsale.PricingMethodID == 14
                                              && good.GoodGroupID == GroupID && goodsale.RetailPrice >= MinPrice && goodsale.RetailPrice <= MaxPrice
                                              orderby good.RetailPrice descending
                                              select new
                                              {
                                                  good.ID,
                                                  good.Name,
                                                  good.BarCode,
                                                  good.GoodGroupID,
                                                  good.Code,
                                                  goodsale.RetailPrice,
                                                  good.Notes,
                                                  good.TypeID,
                                                  good.SiteVisible,
                                                  good.TabletVisible,
                                                  good.CreateDate,
                                                  good.FarsiCreateDate,
                                                  good.Sequence,
                                              }).ToList();
                        foreach (var item in CategoriesGood)
                        {
                            model.CategoriesGoods.Add(new Goods
                            {
                                ID = item.ID,
                                BarCode = item.BarCode,
                                GoodGroupID = item.GoodGroupID,
                                Code = item.Code,
                                Name = item.Name,
                                RetailPrice = item.RetailPrice,
                                Notes = item.Notes,
                                TypeID = item.TypeID,
                                SiteVisible = item.SiteVisible,
                                TabletVisible = item.TabletVisible,
                                Sequence = item.Sequence,
                            });
                        }
                        return model.CategoriesGoods;

                    }

                }
            }
        }

        public virtual ActionResult GetPagingCategories(int pageNumber, int pageSize, int GroupID, List<string> ChekedBrands, decimal? MinPrice, decimal MaxPrice, string Sort)
        {
            List<int> SelectBrand = new List<int>();
            //var SortingTemp= Sorting(pageNumber, pageSize, GroupID, ChekedBrands, MinPrice, MaxPrice, Sort);
            var model = new GoodViewModel();
            model.CategoriesGoods = new List<Goods>();
            IEnumerable<Goods> SortingTemp = new List<Goods>();

            using (var db = new DataBaseContext())
            {

                //filter Price
                if (MinPrice != 0 || MaxPrice != 0)
                {
                    if (ChekedBrands != null)
                    {
                        SelectBrand = ChekedBrands.Select(int.Parse).ToList();
                        if (Sort != "")
                        {
                            SortingTemp = Sorting(pageNumber, pageSize, GroupID, ChekedBrands, MinPrice, MaxPrice, Sort);
                        }
                        var CategoriesGood = (from good in db.tblGoods
                                              join goodsale in db.tblGoodSaleInfoes on good.BarCode equals goodsale.Barcode
                                              where good.TabletVisible == true && goodsale.RetailPrice != 0 && goodsale.PricingMethodID == 14
                                              && good.GoodGroupID == GroupID
                                              && SelectBrand.Contains(good.TypeID ?? 0)
                                              select new
                                              {
                                                  good.ID,
                                                  good.Name,
                                                  good.BarCode,
                                                  good.GoodGroupID,
                                                  good.Code,
                                                  goodsale.RetailPrice,
                                                  good.Notes,
                                                  good.TypeID,
                                                  good.SiteVisible,
                                                  good.TabletVisible,
                                                  good.CreateDate,
                                                  good.FarsiCreateDate,
                                                  good.Sequence,
                                              }).ToList();

                        if (SortingTemp.Count() == 0)
                        {
                            foreach (var item in CategoriesGood)
                            {
                                model.CategoriesGoods.Add(new Goods
                                {
                                    ID = item.ID,
                                    BarCode = item.BarCode,
                                    GoodGroupID = item.GoodGroupID,
                                    Code = item.Code,
                                    Name = item.Name,
                                    RetailPrice = item.RetailPrice,
                                    Notes = item.Notes,
                                    TypeID = item.TypeID,
                                    SiteVisible = item.SiteVisible,
                                    TabletVisible = item.TabletVisible,
                                    Sequence = item.Sequence,
                                });
                            }
                        }
                        else
                        {

                            model.CategoriesGoods = SortingTemp.ToList();

                        }

                        var Goodtypes = (from good in db.tblGoods
                                         join goodsale in db.tblGoodSaleInfoes on good.BarCode equals goodsale.Barcode
                                         join type in db.tblGoodTypes on good.TypeID equals type.ID
                                         where good.TabletVisible == true && goodsale.RetailPrice != 0 && goodsale.PricingMethodID == 14
                                         && good.GoodGroupID == GroupID
                                         orderby type.ID
                                         select type

                                       ).Distinct().ToList();

                        var Minprice = (from good in db.tblGoods
                                        join goodsale in db.tblGoodSaleInfoes on good.BarCode equals goodsale.Barcode
                                        join type in db.tblGoodTypes on good.TypeID equals type.ID
                                        where good.TabletVisible == true && goodsale.RetailPrice != 0 && goodsale.PricingMethodID == 14
                                        && good.GoodGroupID == GroupID
                                        && SelectBrand.Contains(good.TypeID ?? 0)
                                        select new { goodsale.RetailPrice }).Min(x => x.RetailPrice);

                        var Maxprice = (from good in db.tblGoods
                                        join goodsale in db.tblGoodSaleInfoes on good.BarCode equals goodsale.Barcode
                                        join type in db.tblGoodTypes on good.TypeID equals type.ID
                                        where good.TabletVisible == true && goodsale.RetailPrice != 0 && goodsale.PricingMethodID == 14
                                        && good.GoodGroupID == GroupID
                                        && SelectBrand.Contains(good.TypeID ?? 0)
                                        select new { goodsale.RetailPrice }).Max(x => x.RetailPrice);

                        var PagedData = Pagination.PagedResult(model.CategoriesGoods, Goodtypes, SelectBrand, pageNumber, pageSize, Minprice, Maxprice);
                        return Json(PagedData, JsonRequestBehavior.AllowGet);
                    }

                    else
                    {

                        if (Sort != "" || Sort != null)
                        {

                            SortingTemp = Sorting(pageNumber, pageSize, GroupID, ChekedBrands, MinPrice, MaxPrice, Sort);
                        }


                        var CategoriesGood = (from good in db.tblGoods
                                              join goodsale in db.tblGoodSaleInfoes on good.BarCode equals goodsale.Barcode
                                              where good.TabletVisible == true && goodsale.RetailPrice != 0 && goodsale.PricingMethodID == 14
                                              && good.GoodGroupID == GroupID && goodsale.RetailPrice >= MinPrice && goodsale.RetailPrice <= MaxPrice
                                              orderby good.FarsiCreateDate descending
                                              select new
                                              {
                                                  good.ID,
                                                  good.Name,
                                                  good.BarCode,
                                                  good.GoodGroupID,
                                                  good.Code,
                                                  goodsale.RetailPrice,
                                                  good.Notes,
                                                  good.TypeID,
                                                  good.SiteVisible,
                                                  good.TabletVisible,
                                                  good.CreateDate,
                                                  good.FarsiCreateDate,
                                                  good.Sequence,
                                              }).ToList();


                        if (SortingTemp.Count() == 0)
                        {
                            foreach (var item in CategoriesGood)
                            {
                                model.CategoriesGoods.Add(new Goods
                                {
                                    ID = item.ID,
                                    BarCode = item.BarCode,
                                    GoodGroupID = item.GoodGroupID,
                                    Code = item.Code,
                                    Name = item.Name,
                                    RetailPrice = item.RetailPrice,
                                    Notes = item.Notes,
                                    TypeID = item.TypeID,
                                    SiteVisible = item.SiteVisible,
                                    TabletVisible = item.TabletVisible,
                                    Sequence = item.Sequence,
                                });
                            }
                        }
                        else
                        {

                            model.CategoriesGoods = SortingTemp.ToList();

                        }


                        var Goodtypes = (from good in db.tblGoods
                                         join goodsale in db.tblGoodSaleInfoes on good.BarCode equals goodsale.Barcode
                                         join type in db.tblGoodTypes on good.TypeID equals type.ID
                                         where good.TabletVisible == true && goodsale.RetailPrice != 0 && goodsale.PricingMethodID == 14
                                         && good.GoodGroupID == GroupID
                                         orderby type.ID
                                         select type

                                   ).Distinct().ToList();

                        var Minprice = (from good in db.tblGoods
                                        join goodsale in db.tblGoodSaleInfoes on good.BarCode equals goodsale.Barcode
                                        join type in db.tblGoodTypes on good.TypeID equals type.ID
                                        where good.TabletVisible == true && goodsale.RetailPrice != 0 && goodsale.PricingMethodID == 14
                                        && good.GoodGroupID == GroupID
                                        select new { goodsale.RetailPrice }).Min(x => x.RetailPrice);

                        var Maxprice = (from good in db.tblGoods
                                        join goodsale in db.tblGoodSaleInfoes on good.BarCode equals goodsale.Barcode
                                        join type in db.tblGoodTypes on good.TypeID equals type.ID
                                        where good.TabletVisible == true && goodsale.RetailPrice != 0 && goodsale.PricingMethodID == 14
                                        && good.GoodGroupID == GroupID
                                        select new { goodsale.RetailPrice }).Max(x => x.RetailPrice);

                        var PagedData = Pagination.PagedResult(model.CategoriesGoods, Goodtypes, SelectBrand, pageNumber, pageSize, Minprice, Maxprice);
                        return Json(PagedData, JsonRequestBehavior.AllowGet);
                    }


                }


                if (ChekedBrands != null)
                {
                    if (Sort != "")
                    {

                        SortingTemp = Sorting(pageNumber, pageSize, GroupID, ChekedBrands, MinPrice, MaxPrice, Sort);
                    }
                    SelectBrand = ChekedBrands.Select(int.Parse).ToList();

                    var CategoriesGood = (from good in db.tblGoods
                                          join goodsale in db.tblGoodSaleInfoes on good.BarCode equals goodsale.Barcode
                                          where good.TabletVisible == true && goodsale.RetailPrice != 0 && goodsale.PricingMethodID == 14
                                          && good.GoodGroupID == GroupID
                                         && SelectBrand.Contains(good.TypeID ?? 0)
                                          select new
                                          {
                                              good.ID,
                                              good.Name,
                                              good.BarCode,
                                              good.GoodGroupID,
                                              good.Code,
                                              goodsale.RetailPrice,
                                              good.Notes,
                                              good.TypeID,
                                              good.SiteVisible,
                                              good.TabletVisible,
                                              good.CreateDate,
                                              good.FarsiCreateDate,
                                              good.Sequence,
                                          }).ToList();

                    if (SortingTemp.Count() == 0)
                    {
                        foreach (var item in CategoriesGood)
                        {
                            model.CategoriesGoods.Add(new Goods
                            {
                                ID = item.ID,
                                BarCode = item.BarCode,
                                GoodGroupID = item.GoodGroupID,
                                Code = item.Code,
                                Name = item.Name,
                                RetailPrice = item.RetailPrice,
                                Notes = item.Notes,
                                TypeID = item.TypeID,
                                SiteVisible = item.SiteVisible,
                                TabletVisible = item.TabletVisible,
                                Sequence = item.Sequence,
                            });
                        }
                    }
                    else
                    {

                        model.CategoriesGoods = SortingTemp.ToList();

                    }

                    var Goodtypes = (from good in db.tblGoods
                                     join goodsale in db.tblGoodSaleInfoes on good.BarCode equals goodsale.Barcode
                                     join type in db.tblGoodTypes on good.TypeID equals type.ID
                                     where good.TabletVisible == true && goodsale.RetailPrice != 0 && goodsale.PricingMethodID == 14
                                     && good.GoodGroupID == GroupID
                                     orderby type.ID
                                     select type

                                   ).Distinct().ToList();

                    var Minprice = (from good in db.tblGoods
                                    join goodsale in db.tblGoodSaleInfoes on good.BarCode equals goodsale.Barcode
                                    join type in db.tblGoodTypes on good.TypeID equals type.ID
                                    where good.TabletVisible == true && goodsale.RetailPrice != 0 && goodsale.PricingMethodID == 14
                                    && good.GoodGroupID == GroupID
                                    && SelectBrand.Contains(good.TypeID ?? 0)
                                    select new { goodsale.RetailPrice }).Min(x => x.RetailPrice);

                    var Maxprice = (from good in db.tblGoods
                                    join goodsale in db.tblGoodSaleInfoes on good.BarCode equals goodsale.Barcode
                                    join type in db.tblGoodTypes on good.TypeID equals type.ID
                                    where good.TabletVisible == true && goodsale.RetailPrice != 0 && goodsale.PricingMethodID == 14
                                    && good.GoodGroupID == GroupID
                                    && SelectBrand.Contains(good.TypeID ?? 0)
                                    select new { goodsale.RetailPrice }).Max(x => x.RetailPrice);

                    var PagedData = Pagination.PagedResult(model.CategoriesGoods, Goodtypes, SelectBrand, pageNumber, pageSize, Minprice, Maxprice);
                    return Json(PagedData, JsonRequestBehavior.AllowGet);
                }

                else
                {


                    if (Sort != "")
                    {

                        SortingTemp = Sorting(pageNumber, pageSize, GroupID, ChekedBrands, MinPrice, MaxPrice, Sort);
                    }

                    var CategoriesGood = (from good in db.tblGoods
                                          join goodsale in db.tblGoodSaleInfoes on good.BarCode equals goodsale.Barcode
                                          where good.TabletVisible == true && goodsale.RetailPrice != 0 && goodsale.PricingMethodID == 14
                                          && good.GoodGroupID == GroupID
                                          select new
                                          {
                                              good.ID,
                                              good.Name,
                                              good.BarCode,
                                              good.GoodGroupID,
                                              good.Code,
                                              goodsale.RetailPrice,
                                              good.Notes,
                                              good.TypeID,
                                              good.SiteVisible,
                                              good.TabletVisible,
                                              good.CreateDate,
                                              good.FarsiCreateDate,
                                              good.Sequence,
                                          }).ToList();

                    if (SortingTemp.Count() == 0)
                    {
                        foreach (var item in CategoriesGood)
                        {
                            model.CategoriesGoods.Add(new Goods
                            {
                                ID = item.ID,
                                BarCode = item.BarCode,
                                GoodGroupID = item.GoodGroupID,
                                Code = item.Code,
                                Name = item.Name,
                                RetailPrice = item.RetailPrice,
                                Notes = item.Notes,
                                TypeID = item.TypeID,
                                SiteVisible = item.SiteVisible,
                                TabletVisible = item.TabletVisible,
                                Sequence = item.Sequence,
                            });
                        }
                    }
                    else
                    {

                        model.CategoriesGoods = SortingTemp.ToList();

                    }

                    var Goodtypes = (from good in db.tblGoods
                                     join goodsale in db.tblGoodSaleInfoes on good.BarCode equals goodsale.Barcode
                                     join type in db.tblGoodTypes on good.TypeID equals type.ID
                                     where good.TabletVisible == true && goodsale.RetailPrice != 0 && goodsale.PricingMethodID == 14
                                     && good.GoodGroupID == GroupID
                                     orderby type.ID
                                     select type

                               ).Distinct().ToList();

                    var Minprice = (from good in db.tblGoods
                                    join goodsale in db.tblGoodSaleInfoes on good.BarCode equals goodsale.Barcode
                                    join type in db.tblGoodTypes on good.TypeID equals type.ID
                                    where good.TabletVisible == true && goodsale.RetailPrice != 0 && goodsale.PricingMethodID == 14
                                    && good.GoodGroupID == GroupID
                                    select new { goodsale.RetailPrice }).Min(x => x.RetailPrice);

                    var Maxprice = (from good in db.tblGoods
                                    join goodsale in db.tblGoodSaleInfoes on good.BarCode equals goodsale.Barcode
                                    join type in db.tblGoodTypes on good.TypeID equals type.ID
                                    where good.TabletVisible == true && goodsale.RetailPrice != 0 && goodsale.PricingMethodID == 14
                                    && good.GoodGroupID == GroupID
                                    select new { goodsale.RetailPrice }).Max(x => x.RetailPrice);

                    var PagedData = Pagination.PagedResult(model.CategoriesGoods, Goodtypes, SelectBrand, pageNumber, pageSize, Minprice, Maxprice);
                    return Json(PagedData, JsonRequestBehavior.AllowGet);

                }

            }


        }


    }
}